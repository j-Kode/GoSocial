@using PagedList.Core;
@using PagedList.Core.Mvc;
@model IPagedList<GoSocial.Models.Posting>
@{
    ViewData["Title"] = "Home Page";
    Layout = "";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="google-signin-client_id" content="326566777429-p3k0d2cjmpcv1moa31hocoamt5ovvifn.apps.googleusercontent.com">
    <title>@ViewData["Title"] - GoSocial</title>
    <script src="https://apis.google.com/js/platform.js" async defer></script>

    <environment names="Development">
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/css/site.css" />
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/custom.css" />
        <link rel="stylesheet" href="~/css/hover.min.css" asp-append-version="true" />
    </environment>
    <environment names="Staging,Production">
        <link rel="stylesheet" href="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.6/css/bootstrap.min.css"
              asp-fallback-href="~/lib/bootstrap/dist/css/bootstrap.min.css"
              asp-fallback-test-class="sr-only" asp-fallback-test-property="position" asp-fallback-test-value="absolute" />
        <link rel="stylesheet" href="~/css/site.min.css" asp-append-version="true" />
        <link rel="stylesheet" href="~/css/hover.min.css" asp-append-version="true" />
    </environment>
    <environment names="Development">
        <script src="~/lib/jquery/dist/jquery.js"></script>
        <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
        <script src="~/js/site.js" asp-append-version="true"></script>
    </environment>
    <environment names="Staging,Production">
        <script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-2.2.0.min.js"
                asp-fallback-src="~/lib/jquery/dist/jquery.min.js"
                asp-fallback-test="window.jQuery">
        </script>
        <script src="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.6/bootstrap.min.js"
                asp-fallback-src="~/lib/bootstrap/dist/js/bootstrap.min.js"
                asp-fallback-test="window.jQuery && window.jQuery.fn && window.jQuery.fn.modal">
        </script>
        <script src="~/js/site.min.js" asp-append-version="true"></script>
    </environment>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <link rel="stylesheet" href="~/css/font-awesome.min.css" />
    @Html.ApplicationInsightsJavaScript(TelemetryConfiguration)
</head>
<body>

    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a asp-area="" asp-controller="Home" asp-action="Index" class="navbar-brand" style="padding:10px 15px; width:15%"><img style="width:120px" src="~/images/logo.png" /></a>
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li><a asp-area="" asp-controller="Home" asp-action="Index">Home</a></li>
                    <li><a asp-area="" asp-controller="Home" asp-action="AddCampaign">Start Campaign</a></li>
                    <li><a asp-area="" asp-controller="Home" asp-action="About">About</a></li>
                    <li><a asp-area="" asp-controller="Home" asp-action="Contact">Contact</a></li>
                </ul>
                @await Html.PartialAsync("_LoginPartial")
            </div>
        </div>
    </div>
    <div id="HomePageBanner">
        <div id="InnerBannerContainer" class="col-md-12 text-center">
            @using (Html.BeginForm("Index", "Home"))
            {
                <div id="postingSearch" class="form-inline">
                    <div class="form-group col-sm-5">
                        @await Component.InvokeAsync("IndustryList")
                    </div>
                    <div id="locationResults" class="form-group col-sm-5">
                        <input hidden type="text" id="locationSearchID" name="cityId" required />
                        <input type="text" class="form-control" id="locationSearch" required placeholder="start typing your city...">
                    </div>
                    <button type="submit" class="btn btn-primary" style="float:left; height:40px">Search</button>
                </div>
            }
        </div>
    </div>
    <div class="container body-content">

        <script>
            function onSignIn(googleUser) {
                var profile = googleUser.getBasicProfile();
                console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.
                console.log('Name: ' + profile.getName());
                console.log('Image URL: ' + profile.getImageUrl());
                console.log('Email: ' + profile.getEmail());
            }
            $(document).ready(function () {
                var items = [];
                $('#locationSearch').autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: "@Url.Action("Search","Home")",
                            type: "GET",
                            data: request,
                            success: function (data) {
                                response(data);
                            }
                        });
                    },
                    appendTo: $('#locationResults'),
                    select: function (event, ui) {
                        $('#locationSearch').val(ui.item.label);
                        $('#locationSearchID').val(ui.item.value);
                        return false;
                    }
                });

            $('#contactModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget) // Button that triggered the modal
                var recipient = button.data('whatever') // Extract info from data-* attributes
                // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
                var modal = $(this)
                modal.find('.modal-title').text('New message to ' + recipient)
                modal.find('#recipient-name').val(recipient)
                modal.find('#message-subject').val("Hey " + recipient)
            });
            });
        </script>
        <div class="row">
            <div class="col-md-10">
                <h1>Campaign Postings</h1>
            </div>
            <div class="col-sm-2">
                <h3><a href="./Home/AddCampaign" type="button" class="btn-lg btn btn-primary">Start Campaign</a></h3>
            </div>
        </div>
        <div class="row">
            <pager class="pager-container" list="@Model" options="@PagedListRenderOptions.OnlyShowFivePagesAtATime" asp-action="Index" asp-controller="Home" />
            @foreach (var posting in Model)
            {
                <div class="col-xs-12 Posting hvr-underline-reveal" data-toggle="collapse" data-parent="#accordion" href="#Collapse-@Html.DisplayFor(x => posting.Id)" aria-expanded="true">
                        <div class="col-xs-7">
                            <div class="row postingTitle">@Html.DisplayFor(x => posting.Title)</div>
                            <div class="row">@Html.DisplayFor(x => posting.Description)</div>

                        </div>
                        <div class="col-xs-3">
                            @Html.DisplayFor(x => posting.City.City1)
                        </div>
                        <div class="col-xs-1">
                            @if (posting.TimeDifference.TotalMinutes < 1)
                        {
                        @Html.DisplayFor(x => posting.TimeDifference.Seconds); @: secs ago

                        }
                        else if (posting.TimeDifference.TotalHours < 1)
                        {
                        @Html.DisplayFor(x => posting.TimeDifference.Minutes); @: mins ago

                        }
                        else if (posting.TimeDifference.TotalHours < 24)
                        {
                            var hours = posting.TimeDifference.Hours;
                            if (hours < 2)
                            {
                        @:last hour
                            }
                            else
                            {
                        @Html.DisplayFor(x => posting.TimeDifference.Hours); @: hrs ago
                            }
                        }
                        else if (posting.TimeDifference.TotalHours < 168)
                        {
                            var days = posting.TimeDifference.Days;
                            if (days < 2)
                            {
                        @:yesterday
                            }
                            else
                            {
                        @Html.DisplayFor(x => posting.TimeDifference.Days); @: days ago
                            }
                        }
                        else if (posting.TimeDifference.TotalHours < 730)
                        {
                            var weeks = posting.TimeDifference.Days / 7;
                            if (weeks < 2)
                            {
                        @:Last week
                            }
                            else
                            {
                        @weeks @: weeks ago
                            }
                        }
                        else if (posting.TimeDifference.TotalHours < 8760)
                        {
                            var months = posting.TimeDifference.Days / 30;
                            if (months < 2)
                            {
                        @: Last month
                            }
                            else
                            {
                        @months @: months ago
                            }
                        }
                        else
                        {
                            var years = posting.TimeDifference.Days / 365;
                            if (years == 1)
                            {
                        @:Last year
                            }
                            else
                            {
                        @years @: years ago
                                }
                        }
                        </div>
                        <div class="col-xs-1">$@Html.DisplayFor(x => posting.Price)</div>

                    </div>
                    <div class="col-xs-12 panel-collapse collapse Details" id="Collapse-@Html.DisplayFor(x => posting.Id)" role="tabpanel" aria-labelledby="headingOne">
                        <div class="row">
                            <div class="col-xs-6 text-center">
                                <h4><b>@Html.DisplayFor(x => posting.Title)</b></h4>
                            </div>
                            <div class="col-xs-6 text-center"><h4><b>Contact Stuff</b></h4></div>
                        </div>
                        <div class="row PostingAdditionalDetails">
                            <div class="col-xs-3"><h4>Platform</h4>@Html.DisplayFor(x => posting.PlatformId)</div>
                            <div class="col-xs-3"><h4>Email</h4></div>
                            <div class="col-xs-3"><h4>Posted</h4>@Html.DisplayFor(x => posting.Date)</div>
                            <div class="col-xs-3"><h4>Followers</h4></div>
                        </div>
                        <div class="row PostingAdditionalDetails">
                            <div class="col-xs-8"><h4>Description</h4>@Html.DisplayFor(x => posting.Description)</div>
                            <div class="col-xs-4 text-right"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#contactModal" data-whatever="@@@Html.DisplayFor(x => posting.User.UserName)">Contact @@@Html.DisplayFor(x => posting.User.UserName)</button></div>
                        </div>
                    </div>
            }
            <pager class="pager-container" list="@Model" options="@PagedListRenderOptions.OnlyShowFivePagesAtATime" asp-action="Index" asp-controller="Home" />
        </div>
        <div class="row">
            @Html.Partial("Modals")
        </div>

        <hr />
    </div>
    <div id="footer">
        <div class="container">
            <div class="col-sm-12 bottomFooter">
                <div class="container">
                    <p>Copyright 2016 &copy; <span style="color:#7b7b7b">GoSocial</span></p>
                </div>
            </div>
        </div>
    </div>


</body>
</html>
